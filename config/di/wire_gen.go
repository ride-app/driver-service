// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/ride-app/driver-service/api"
	"github.com/ride-app/driver-service/config"
	"github.com/ride-app/driver-service/repositories/driver"
	"github.com/ride-app/driver-service/repositories/vehicle"
	"github.com/ride-app/driver-service/repositories/wallet"
	"github.com/ride-app/driver-service/third-party"
	"github.com/ride-app/driver-service/utils/logger"
)

// Injectors from wire.go:

func InitializeService(logger2 logger.Logger, config2 *config.Config) (*api.DriverServiceServer, error) {
	app, err := thirdparty.NewFirebaseApp(logger2, config2)
	if err != nil {
		return nil, err
	}
	firebaseImpl, err := driverrepository.NewFirebaseDriverRepository(app, logger2)
	if err != nil {
		return nil, err
	}
	vehiclerepositoryFirebaseImpl, err := vehiclerepository.NewFirebaseVehicleRepository(app, logger2)
	if err != nil {
		return nil, err
	}
	impl, err := walletrepository.New(logger2, config2)
	if err != nil {
		return nil, err
	}
	driverServiceServer := api.New(firebaseImpl, vehiclerepositoryFirebaseImpl, impl, logger2)
	return driverServiceServer, nil
}
