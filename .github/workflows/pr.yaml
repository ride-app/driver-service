name: pr

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - trunk-merge/**

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint+Unit Tests
    env:
      GOPRIVATE: buf.build/gen/go
      BUF_USER: debkanchan

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - uses: bufbuild/buf-setup-action@v1.26.0
        with:
          github_token: ${{ github.token }}

      - name: Authenticate buf
        run: echo ${{ secrets.BUF_TOKEN }} | buf registry login --username ${{ env.BUF_USER }} --token-stdin

      - name: Build protobuf
        uses: trunk-io/breakpoint@v1
        with:
          breakpoint-id: buf-generate
          run: buf generate
          trunk-token: ${{ secrets.TRUNK_TOKEN }}
          org: ride

      - name: Lint
        uses: trunk-io/trunk-action@v1

      - name: Unit Tests
        run: go run github.com/onsi/ginkgo/v2/ginkgo -r --randomize-all --randomize-suites --fail-on-pending --keep-going --cover --coverprofile=cover.json --race --trace --json-report=report.json --timeout=10m -ldflags "-X google.golang.org/protobuf/reflect/protoregistry.conflictPolicy=warn" -tags=unit_tests

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unit-tests
          files: ./cover.json,./report.json
          fail_ci_if_error: true
          verbose: true

  # preview:
  #   name: Preview Infra
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     id-token: write
  #   env:
  #     SERVICE_NAME: driver-service
  #   strategy:
  #     matrix:
  #       environment: [dev, production]
  #   environment: ${{ matrix.environment }}
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 16.x

  #     - run: npm install
  #       working-directory: infra

  #     - name: Cache node_modules
  #       uses: actions/cache@v3.3.1
  #       with:
  #         path: |
  #           **/node_modules
  #         key: |
  #           node-${{ hashfiles('**/package-lock.json') }}
  #         restore-keys: |
  #           node-

  #     - name: Authenticate Google Cloud
  #       uses: google-github-actions/auth@v1
  #       with:
  #         token_format: access_token
  #         workload_identity_provider: projects/486946551871/locations/global/workloadIdentityPools/github-actions/providers/github-actions-provider
  #         service_account: pulumi@ride-app-prod.iam.gserviceaccount.com

  #     - uses: pulumi/actions@v4
  #       with:
  #         work-dir: infra
  #         command: preview
  #         stack-name: ride/${{ vars.STACK }}
  #       env:
  #         PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
